%YAML:1.0

#--------------------------------------------------------------------------------------------
# Camera Parameters. Adjust them!
# Camera.bl is baseline in meters
#--------------------------------------------------------------------------------------------

# factory calibration
Camera.serial: "727212070491"
Camera.fx: 383.242828369141
Camera.fy: 383.242828369141
Camera.cx: 319.657806396484
Camera.cy: 243.611282348633
#Camera.fx: 385
#Camera.fy: 385
#Camera.cx: 320
#Camera.cy: 240
Camera.k1: 0.0
Camera.k2: 0.0
Camera.p1: 0.0
Camera.p2: 0.0
#Camera.bl: 0.0498920977115631

# manual calibration
Camera.bl: 0.0500099108959238


Camera.width: 640
Camera.height: 480

# Camera frames per second 
Camera.fps: 30.0

# Color order of the images (0: BGR, 1: RGB. It is ignored if images are grayscale)
Camera.RGB: 1

# Close/Far threshold. Baseline times.
ThDepth: 40

# Depth map values factor (depth_value / DepthMapFactor = meters)
DepthMapFactor: 1.0

#--------------------------------------------------------------------------------------------
# optional pivot calibration
#--------------------------------------------------------------------------------------------

Pivot.rx: 0.0
Pivot.ry: 0.0
Pivot.rz: 0.0
Pivot.tx: 0.0
Pivot.ty: 0.0
Pivot.tz: 0.0

#--------------------------------------------------------------------------------------------
# Stereo Rectification. Only if you need to pre-rectify the images.
# Camera.fx, .fy, etc must be the same as in LEFT.P
#--------------------------------------------------------------------------------------------
LEFT.height: 480
LEFT.width: 640
LEFT.D: !!opencv-matrix
   rows: 1
   cols: 5
   dt: d
   data:[0.00553589065864589, -0.00764699583865207, 0.00408021636795671, 0, 0]
#   data:[0, 0, 0, 0, 0]
LEFT.K: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [383.424123340757, 0, 321.335145993603, 0, 383.591491365483, 243.889240033095, 0, 0, 1]
LEFT.R:  !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [1, 0, 0, 0, 1, 0, 0, 0, 1]

RIGHT.height: 480
RIGHT.width: 640
RIGHT.D: !!opencv-matrix
   rows: 1
   cols: 5
   dt: d
   data:[0.00715478562454628, -0.0111517819898512, 0.00595108922349590, 0.0, 0.0]
#   data:[0, 0, 0, 0.0, 0.0]
RIGHT.K: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [383.336282642445, 0, 321.376262003858, 0, 383.546065188454, 244.370268626503, 0, 0, 1]
RIGHT.R:  !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [1, 0, 0, 0, 1, 0, 0, 0, 1]

#--------------------------------------------------------------------------------------------
# ORB Parameters
#--------------------------------------------------------------------------------------------

# ORB Extractor: Number of features per image
ORBextractor.nFeatures: 1000

# ORB Extractor: Scale factor between levels in the scale pyramid 	
ORBextractor.scaleFactor: 1.2

# ORB Extractor: Number of levels in the scale pyramid	
ORBextractor.nLevels: 8

# ORB Extractor: Fast threshold
# Image is divided in a grid. At each cell FAST are extracted imposing a minimum response.
# Firstly we impose iniThFAST. If no corners are detected we impose a lower value minThFAST
# You can lower these values if your images have low contrast			
ORBextractor.iniThFAST: 20
ORBextractor.minThFAST: 7

#--------------------------------------------------------------------------------------------
# Viewer Parameters
#--------------------------------------------------------------------------------------------
Viewer.KeyFrameSize: 0.05
Viewer.KeyFrameLineWidth: 1
Viewer.GraphLineWidth: 0.9
Viewer.PointSize:2
Viewer.CameraSize: 0.08
Viewer.CameraLineWidth: 3
Viewer.ViewpointX: 0
Viewer.ViewpointY: -0.7
Viewer.ViewpointZ: -1.8
Viewer.ViewpointF: 500

